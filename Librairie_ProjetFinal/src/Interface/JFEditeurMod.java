package Interface;

import ObjetsSimples.Editeur;
import ObjetsSimples.Statut;
import com.sun.corba.se.impl.resolver.SplitLocalResolverImpl;
import exceptions.DataExceptions;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import xchange.Xchange;

/**
 *
 * @author cda201
 */
public class JFEditeurMod extends javax.swing.JFrame {

    private Editeur editeur;
    private HomePage JFE;
    private String button;

    /**
     * Creates new form JFEditeurMod
     */
    public JFEditeurMod() {
        initComponents();
        this.editeur = new Editeur();
    }

    public String getButton() {
        return button;
    }

    public void setButton(String button) {
        this.button = button;
    }

    public HomePage getJFE() {
        return JFE;
    }

    public void setJFE(HomePage JFE) {
        this.JFE = JFE;
    }

    public Editeur getEditeur() {
        return editeur;
    }

    public void setEditeur(Editeur editeur) {
        this.editeur = editeur;
    }

    public void enregOff() {
        jbEnregistrer.setVisible(false);
    }

    public void textFill() {
        jtfNom.setText(editeur.getName());
        jtfAdresse.setText(editeur.getMail());
        jtfTel.setText(editeur.getTel());

        jtaNotes.append(editeur.getNotes());
        jtaNotes.setWrapStyleWord(true);
        jtaNotes.setLineWrap(true);

        for (int i = 0; i < jcbStatus.getItemCount(); i++) {
            Statut st = (Statut) jcbStatus.getItemAt(i);
            if (st.getId().equals(editeur.getStatus().getId())) {
                jcbStatus.setSelectedIndex(i);
            }
        }

    }

    public void selectStat() {
        jcbStatus.setSelectedIndex(jcbStatus.getItemCount() - 1);
    }

    private DefaultComboBoxModel initStatus() {
        Vector v = new Vector();

        Xchange ech = new Xchange();
        Statement stat = null;
        String query = "SELECT STATUSID, STATUSNAME,STATUS_DESCR FROM STATUS "
                + "WHERE STATUSID BETWEEN 600 AND 699";
        ResultSet rs = null;

        try {

            ech.connect();
            stat = ech.getConnexion().createStatement();
            rs = stat.executeQuery(query);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Création connexion : " + ex.getErrorCode() + " / " + ex.getMessage(), "EditeurMod", JOptionPane.ERROR_MESSAGE);;
        }
        try {
            while (rs.next()) {
                Statut st = new Statut();
                st.setId(rs.getString("STATUSID"));
                st.setStatusname(rs.getString("STATUSNAME"));
                st.setStatusdescr(rs.getString("STATUS_DESCR"));

                v.add(st);

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lecture données : " + ex.getErrorCode() + " / " + ex.getMessage(), "EditeurMod", JOptionPane.ERROR_MESSAGE);
        } catch (DataExceptions ex) {
            JOptionPane.showMessageDialog(null, "Lecture données : " + ex.getErrorCode() + " / " + ex.getMessage(), "EditeurMod", JOptionPane.ERROR_MESSAGE);
        } finally {
            ech.close();
        }

        return new DefaultComboBoxModel(v);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlActif = new javax.swing.JLabel();
        jlNom = new javax.swing.JLabel();
        jtfNom = new javax.swing.JTextField();
        jlAdresse = new javax.swing.JLabel();
        jtfAdresse = new javax.swing.JTextField();
        jlTel = new javax.swing.JLabel();
        jtfTel = new javax.swing.JTextField();
        jlNotes = new javax.swing.JLabel();
        jcbStatus = new javax.swing.JComboBox();
        jbEnregistrer = new javax.swing.JButton();
        jbFermer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaNotes = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jlActif.setText("Statut");

        jlNom.setText("Nom");

        jtfNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNomActionPerformed(evt);
            }
        });

        jlAdresse.setText("Adresse");

        jlTel.setText("Tel");

        jlNotes.setText("Notes");

        jcbStatus.setModel(initStatus());

        jbEnregistrer.setText("Enregistrer");
        jbEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEnregistrerActionPerformed(evt);
            }
        });

        jbFermer.setText("Fermer");
        jbFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFermerActionPerformed(evt);
            }
        });

        jtaNotes.setColumns(20);
        jtaNotes.setRows(5);
        jScrollPane1.setViewportView(jtaNotes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlAdresse)
                                .addGap(53, 53, 53)
                                .addComponent(jtfAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlNom)
                                    .addComponent(jlActif))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfNom, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                                    .addComponent(jcbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlTel)
                                    .addComponent(jlNotes))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfTel, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jbEnregistrer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbFermer)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlActif)
                    .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNom)
                    .addComponent(jtfNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlAdresse)
                    .addComponent(jtfAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTel)
                    .addComponent(jtfTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlNotes)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEnregistrer)
                    .addComponent(jbFermer))
                .addContainerGap())
        );

        setBounds(0, 0, 594, 624);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNomActionPerformed


    }//GEN-LAST:event_jtfNomActionPerformed

    private void jbFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFermerActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbFermerActionPerformed

    private void jbEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEnregistrerActionPerformed
        //mise à jour de l'objet avec controle d'erreur grâce à error
        if (this.button.equals("mod")) {
            int error = 0;
            //editeur.setEditDate();
            try {
                //System.out.println(jtfNom.getText());
                editeur.setName(jtfNom.getText());
            } catch (DataExceptions ex) {
                JOptionPane.showMessageDialog(null, "Ecriture Nom : " + ex.getErrorCode() + " / " + ex.getMessage(), "EditeurMod", JOptionPane.ERROR_MESSAGE);
                error += 1;
            }
            try {
                //System.out.println(jtfAdresse.getText());
                editeur.setMail(jtfAdresse.getText());
            } catch (DataExceptions ex) {
                JOptionPane.showMessageDialog(null, "Ecriture Adresse : " + ex.getErrorCode() + " / " + ex.getMessage(), "EditeurMod", JOptionPane.ERROR_MESSAGE);
                error += 1;
            }
            try {
                //System.out.println(jtfTel.getText());
                editeur.setTel(jtfTel.getText());
            } catch (DataExceptions ex) {
                JOptionPane.showMessageDialog(null, "Ecriture Téléphone : " + ex.getErrorCode() + " / " + ex.getMessage(), "EditeurMod", JOptionPane.ERROR_MESSAGE);
                error += 1;
            }
            try {
                //System.out.println(jtaNotes.getText());
                editeur.setNotes(jtaNotes.getText());
            } catch (DataExceptions ex) {
                JOptionPane.showMessageDialog(null, "Ecriture Notes : " + ex.getErrorCode() + " / " + ex.getMessage(), "EditeurMod", JOptionPane.ERROR_MESSAGE);
                error += 1;
            }

            Statut st = (Statut) jcbStatus.getSelectedItem();
            editeur.setStatus(st);

//si pas d'erreur ( error = 0) je sauvegarde
            int n = 0;
            if (error == 0) {
                if (editeur.getStatus().getId().equals("699")) {
                    n = JOptionPane.showConfirmDialog(rootPane, "ATTENTION vous allez supprimer un editeur.\nCette action est irrémediable\nEtes-vous sûr ?", "Suppression", JOptionPane.OK_CANCEL_OPTION);
                }
                if (n == 0) {
                    Xchange ech = new Xchange();
                    ech.connect();
                    editeur.save(ech, editeur.genValue());
                    ech.close();

                }

            }
        }

        //action selon la fenetre mere
        if (this.button.equals("new")) {
            jtfNom.setText("");
            jtfAdresse.setText("");
            jtfTel.setText("");
            jtaNotes.setText("");
        }
        if (this.button.equals("sup")) {
                        Statut st = (Statut) jcbStatus.getSelectedItem();
            editeur.setStatus(st);
            int n = 0;
            if (editeur.getStatus().getId().equals("699")) {
                n = JOptionPane.showConfirmDialog(rootPane, "ATTENTION vous allez supprimer un editeur.\nCette action est irrémediable\nEtes-vous sûr ?", "Suppression", JOptionPane.OK_CANCEL_OPTION);
            }
            if (n == 0) {
                Xchange ech = new Xchange();
                ech.connect();
                editeur.save(ech, editeur.genValue());
                ech.close();
            }
        }

//refresh de la table de la fenetre mère
        this.JFE.refreshEdit();
    }//GEN-LAST:event_jbEnregistrerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFEditeurMod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFEditeurMod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFEditeurMod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFEditeurMod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFEditeurMod().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEnregistrer;
    private javax.swing.JButton jbFermer;
    private javax.swing.JComboBox jcbStatus;
    private javax.swing.JLabel jlActif;
    private javax.swing.JLabel jlAdresse;
    private javax.swing.JLabel jlNom;
    private javax.swing.JLabel jlNotes;
    private javax.swing.JLabel jlTel;
    private javax.swing.JTextArea jtaNotes;
    private javax.swing.JTextField jtfAdresse;
    private javax.swing.JTextField jtfNom;
    private javax.swing.JTextField jtfTel;
    // End of variables declaration//GEN-END:variables
}
